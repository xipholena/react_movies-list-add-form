{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","inputTitle","inputImdbId","validateInput","e","name","target","value","length","setState","handleSubmit","preventDefault","props","onAdd","clearForm","handleChange","change","dataset","this","onSubmit","type","placeholder","data-change","classNames","onChange","onBlur","Component","App","moviesFromServer","addMovie","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70c78888.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie?.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    inputTitle: false,\n    inputImdbId: false,\n  };\n\n  validateInput = (e) => {\n    const { name } = e.target;\n\n    if (e.target.value.length < 3) {\n      this.setState({\n        [name]: true,\n      });\n    } else {\n      this.setState({\n        [name]: false,\n      });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(movie);\n    this.clearForm();\n  }\n\n  handleChange = (e) => {\n    const { change } = e.target.dataset;\n\n    this.setState({\n      [change]: e.target.value,\n    });\n  }\n\n  clearForm() {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId,\n      inputTitle, inputImdbId } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"form__label\">\n          <input\n            type=\"text\"\n            placeholder=\"Title\"\n            name=\"inputTitle\"\n            value={title}\n            data-change=\"title\"\n            className={classNames('form__input', {\n              'form__input--error': inputTitle,\n            })}\n            onChange={this.handleChange}\n            onBlur={this.validateInput}\n          />\n          {inputTitle\n          && <p className=\"form__error\">Please, enter the title</p>}\n        </label>\n\n        <label className=\"form__label\">\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={description}\n            data-change=\"description\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label className=\"form__label\">\n          <input\n            type=\"text\"\n            placeholder=\"image url\"\n            name=\"inputImgUrl\"\n            value={imgUrl}\n            data-change=\"imgUrl\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n            onBlur={this.validateInput}\n          />\n        </label>\n\n        <label className=\"form__label\">\n          <input\n            type=\"text\"\n            placeholder=\"IMDB url\"\n            value={imdbUrl}\n            data-change=\"imdbUrl\"\n            name=\"inputImdbUrl\"\n            className=\"form__input\"\n            onChange={this.handleChange}\n            onBlur={this.validateInput}\n          />\n        </label>\n\n        <label className=\"form__label\">\n          <input\n            type=\"text\"\n            placeholder=\"IMDB id\"\n            value={imdbId}\n            data-change=\"imdbId\"\n            name=\"inputImdbId\"\n            className={classNames('form__input', {\n              'form__input--error': inputImdbId,\n            })}\n            onChange={this.handleChange}\n            onBlur={this.validateInput}\n          />\n          {inputImdbId\n            && <p className=\"form__error\">Please, enter the IMBD id</p>}\n        </label>\n\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(currentState => ({\n      movies: [\n        ...currentState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1 className=\"sidebar__title\">\n            Add new movie to the list\n          </h1>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}